{"ast":null,"code":"import _toConsumableArray from \"D:/Prasanth/CCBC2/611 - Adoption of Cloud Computing and Blockchain/TelecomProject/Telcom_GitRepo/Tfq_GitRepo/app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { AbiError } from 'web3-errors';\nimport { uint8ArrayConcat } from 'web3-utils';\n// eslint-disable-next-line import/no-cycle\nimport { decodeParamFromAbiParameter, encodeNumber, encodeParamFromAbiParameter } from './index.js';\nimport { extractArrayType, isDynamic, WORD_SIZE } from '../utils.js';\nimport { decodeNumber } from './number.js';\nimport { encodeDynamicParams } from './utils.js';\nexport function encodeArray(param, values) {\n  if (!Array.isArray(values)) {\n    throw new AbiError('Expected value to be array', {\n      abi: param,\n      values: values\n    });\n  }\n  var _extractArrayType = extractArrayType(param),\n    size = _extractArrayType.size,\n    arrayItemParam = _extractArrayType.param;\n  var encodedParams = values.map(function (v) {\n    return encodeParamFromAbiParameter(arrayItemParam, v);\n  });\n  var dynamic = size === -1;\n  var dynamicItems = encodedParams.length > 0 && encodedParams[0].dynamic;\n  if (!dynamic && values.length !== size) {\n    throw new AbiError(\"Given arguments count doesn't match array length\", {\n      arrayLength: size,\n      argumentsLength: values.length\n    });\n  }\n  if (dynamic || dynamicItems) {\n    var encodingResult = encodeDynamicParams(encodedParams);\n    if (dynamic) {\n      var encodedLength = encodeNumber({\n        type: 'uint256',\n        name: ''\n      }, encodedParams.length).encoded;\n      return {\n        dynamic: true,\n        encoded: encodedParams.length > 0 ? uint8ArrayConcat(encodedLength, encodingResult) : encodedLength\n      };\n    }\n    return {\n      dynamic: true,\n      encoded: encodingResult\n    };\n  }\n  return {\n    dynamic: false,\n    encoded: uint8ArrayConcat.apply(void 0, _toConsumableArray(encodedParams.map(function (p) {\n      return p.encoded;\n    })))\n  };\n}\nexport function decodeArray(param, bytes) {\n  // eslint-disable-next-line prefer-const\n  var _extractArrayType2 = extractArrayType(param),\n    size = _extractArrayType2.size,\n    arrayItemParam = _extractArrayType2.param;\n  var dynamic = size === -1;\n  var consumed = 0;\n  var result = [];\n  var remaining = bytes;\n  // dynamic array, we need to decode length\n  if (dynamic) {\n    var lengthResult = decodeNumber({\n      type: 'uint32',\n      name: ''\n    }, bytes);\n    size = Number(lengthResult.result);\n    consumed = lengthResult.consumed;\n    remaining = lengthResult.encoded;\n  }\n  var hasDynamicChild = isDynamic(arrayItemParam);\n  if (hasDynamicChild) {\n    // known length but dynamic child, each child is actually head element with encoded offset\n    for (var i = 0; i < size; i += 1) {\n      var offsetResult = decodeNumber({\n        type: 'uint32',\n        name: ''\n      }, remaining.subarray(i * WORD_SIZE));\n      consumed += offsetResult.consumed;\n      var decodedChildResult = decodeParamFromAbiParameter(arrayItemParam, remaining.subarray(Number(offsetResult.result)));\n      consumed += decodedChildResult.consumed;\n      result.push(decodedChildResult.result);\n    }\n    return {\n      result: result,\n      encoded: remaining.subarray(consumed),\n      consumed: consumed\n    };\n  }\n  for (var _i = 0; _i < size; _i += 1) {\n    // decode static params\n    var _decodedChildResult = decodeParamFromAbiParameter(arrayItemParam, bytes.subarray(consumed));\n    consumed += _decodedChildResult.consumed;\n    result.push(_decodedChildResult.result);\n  }\n  return {\n    result: result,\n    encoded: bytes.subarray(consumed),\n    consumed: consumed\n  };\n}","map":{"version":3,"names":["AbiError","uint8ArrayConcat","decodeParamFromAbiParameter","encodeNumber","encodeParamFromAbiParameter","extractArrayType","isDynamic","WORD_SIZE","decodeNumber","encodeDynamicParams","encodeArray","param","values","Array","isArray","abi","_extractArrayType","size","arrayItemParam","encodedParams","map","v","dynamic","dynamicItems","length","arrayLength","argumentsLength","encodingResult","encodedLength","type","name","encoded","apply","_toConsumableArray","p","decodeArray","bytes","_extractArrayType2","consumed","result","remaining","lengthResult","Number","hasDynamicChild","i","offsetResult","subarray","decodedChildResult","push"],"sources":["D:\\Prasanth\\CCBC2\\611 - Adoption of Cloud Computing and Blockchain\\TelecomProject\\Telcom_GitRepo\\Tfq_GitRepo\\app\\node_modules\\web3-eth-abi\\src\\coders\\base\\array.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { AbiError } from 'web3-errors';\nimport { AbiParameter } from 'web3-types';\nimport { uint8ArrayConcat } from 'web3-utils';\n// eslint-disable-next-line import/no-cycle\nimport { decodeParamFromAbiParameter, encodeNumber, encodeParamFromAbiParameter } from './index.js';\nimport { DecoderResult, EncoderResult } from '../types.js';\nimport { extractArrayType, isDynamic, WORD_SIZE } from '../utils.js';\nimport { decodeNumber } from './number.js';\nimport { encodeDynamicParams } from './utils.js';\n\nexport function encodeArray(param: AbiParameter, values: unknown): EncoderResult {\n\tif (!Array.isArray(values)) {\n\t\tthrow new AbiError('Expected value to be array', { abi: param, values });\n\t}\n\tconst { size, param: arrayItemParam } = extractArrayType(param);\n\tconst encodedParams = values.map(v => encodeParamFromAbiParameter(arrayItemParam, v));\n\tconst dynamic = size === -1;\n\tconst dynamicItems = encodedParams.length > 0 && encodedParams[0].dynamic;\n\tif (!dynamic && values.length !== size) {\n\t\tthrow new AbiError(\"Given arguments count doesn't match array length\", {\n\t\t\tarrayLength: size,\n\t\t\targumentsLength: values.length,\n\t\t});\n\t}\n\tif (dynamic || dynamicItems) {\n\t\tconst encodingResult = encodeDynamicParams(encodedParams);\n\t\tif (dynamic) {\n\t\t\tconst encodedLength = encodeNumber(\n\t\t\t\t{ type: 'uint256', name: '' },\n\t\t\t\tencodedParams.length,\n\t\t\t).encoded;\n\t\t\treturn {\n\t\t\t\tdynamic: true,\n\t\t\t\tencoded:\n\t\t\t\t\tencodedParams.length > 0\n\t\t\t\t\t\t? uint8ArrayConcat(encodedLength, encodingResult)\n\t\t\t\t\t\t: encodedLength,\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\tdynamic: true,\n\t\t\tencoded: encodingResult,\n\t\t};\n\t}\n\n\treturn {\n\t\tdynamic: false,\n\t\tencoded: uint8ArrayConcat(...encodedParams.map(p => p.encoded)),\n\t};\n}\n\nexport function decodeArray(param: AbiParameter, bytes: Uint8Array): DecoderResult<unknown[]> {\n\t// eslint-disable-next-line prefer-const\n\tlet { size, param: arrayItemParam } = extractArrayType(param);\n\tconst dynamic = size === -1;\n\n\tlet consumed = 0;\n\tconst result: unknown[] = [];\n\tlet remaining = bytes;\n\t// dynamic array, we need to decode length\n\tif (dynamic) {\n\t\tconst lengthResult = decodeNumber({ type: 'uint32', name: '' }, bytes);\n\t\tsize = Number(lengthResult.result);\n\t\tconsumed = lengthResult.consumed;\n\t\tremaining = lengthResult.encoded;\n\t}\n\tconst hasDynamicChild = isDynamic(arrayItemParam);\n\tif (hasDynamicChild) {\n\t\t// known length but dynamic child, each child is actually head element with encoded offset\n\t\tfor (let i = 0; i < size; i += 1) {\n\t\t\tconst offsetResult = decodeNumber(\n\t\t\t\t{ type: 'uint32', name: '' },\n\t\t\t\tremaining.subarray(i * WORD_SIZE),\n\t\t\t);\n\t\t\tconsumed += offsetResult.consumed;\n\t\t\tconst decodedChildResult = decodeParamFromAbiParameter(\n\t\t\t\tarrayItemParam,\n\t\t\t\tremaining.subarray(Number(offsetResult.result)),\n\t\t\t);\n\t\t\tconsumed += decodedChildResult.consumed;\n\t\t\tresult.push(decodedChildResult.result);\n\t\t}\n\t\treturn {\n\t\t\tresult,\n\t\t\tencoded: remaining.subarray(consumed),\n\t\t\tconsumed,\n\t\t};\n\t}\n\n\tfor (let i = 0; i < size; i += 1) {\n\t\t// decode static params\n\t\tconst decodedChildResult = decodeParamFromAbiParameter(\n\t\t\tarrayItemParam,\n\t\t\tbytes.subarray(consumed),\n\t\t);\n\t\tconsumed += decodedChildResult.consumed;\n\t\tresult.push(decodedChildResult.result);\n\t}\n\treturn {\n\t\tresult,\n\t\tencoded: bytes.subarray(consumed),\n\t\tconsumed,\n\t};\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}