{"ast":null,"code":"import _regeneratorRuntime from \"D:/Prasanth/CCBC2/611 - Adoption of Cloud Computing and Blockchain/TelecomProject/Telcom_GitRepo/Tfq_GitRepo/app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _createForOfIteratorHelper from \"D:/Prasanth/CCBC2/611 - Adoption of Cloud Computing and Blockchain/TelecomProject/Telcom_GitRepo/Tfq_GitRepo/app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"D:/Prasanth/CCBC2/611 - Adoption of Cloud Computing and Blockchain/TelecomProject/Telcom_GitRepo/Tfq_GitRepo/app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/Prasanth/CCBC2/611 - Adoption of Cloud Computing and Blockchain/TelecomProject/Telcom_GitRepo/Tfq_GitRepo/app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { ETH_DATA_FORMAT } from 'web3-types';\nimport { isNullish } from 'web3-validator';\nimport { ContractExecutionError, InvalidResponseError, TransactionRevertedWithoutReasonError, TransactionRevertInstructionError, TransactionRevertWithCustomError } from 'web3-errors';\nimport { ethRpcMethods } from 'web3-rpc-methods';\n// eslint-disable-next-line import/no-cycle\nimport { getTransactionGasPricing } from './get_transaction_gas_pricing.js';\n// eslint-disable-next-line import/no-cycle\nimport { trySendTransaction } from './try_send_transaction.js';\n// eslint-disable-next-line import/no-cycle\nimport { watchTransactionForConfirmations } from './watch_transaction_for_confirmations.js';\nimport { ALL_EVENTS_ABI } from '../constants.js';\n// eslint-disable-next-line import/no-cycle\nimport { getTransactionError } from './get_transaction_error.js';\n// eslint-disable-next-line import/no-cycle\nimport { getRevertReason } from './get_revert_reason.js';\nimport { decodeEventABI } from './decoding.js';\nexport var SendTxHelper = /*#__PURE__*/function () {\n  function SendTxHelper(_ref) {\n    var options = _ref.options,\n      web3Context = _ref.web3Context,\n      promiEvent = _ref.promiEvent,\n      returnFormat = _ref.returnFormat;\n    _classCallCheck(this, SendTxHelper);\n    this.options = {\n      checkRevertBeforeSending: true\n    };\n    this.options = options;\n    this.web3Context = web3Context;\n    this.promiEvent = promiEvent;\n    this.returnFormat = returnFormat;\n  }\n  _createClass(SendTxHelper, [{\n    key: \"getReceiptWithEvents\",\n    value: function getReceiptWithEvents(data) {\n      var _a, _b;\n      var result = Object.assign({}, data !== null && data !== void 0 ? data : {});\n      if (((_a = this.options) === null || _a === void 0 ? void 0 : _a.contractAbi) && result.logs && result.logs.length > 0) {\n        result.events = {};\n        var _iterator = _createForOfIteratorHelper(result.logs),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var log = _step.value;\n            var event = decodeEventABI(ALL_EVENTS_ABI, log, (_b = this.options) === null || _b === void 0 ? void 0 : _b.contractAbi, this.returnFormat);\n            if (event.event) {\n              result.events[event.event] = event;\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n      return result;\n    }\n  }, {\n    key: \"checkRevertBeforeSending\",\n    value: function checkRevertBeforeSending(tx) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var reason;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!(this.options.checkRevertBeforeSending !== false)) {\n                _context.next = 8;\n                break;\n              }\n              _context.next = 3;\n              return getRevertReason(this.web3Context, tx, this.options.contractAbi);\n            case 3:\n              reason = _context.sent;\n              if (!(reason !== undefined)) {\n                _context.next = 8;\n                break;\n              }\n              _context.next = 7;\n              return getTransactionError(this.web3Context, tx, undefined, undefined, this.options.contractAbi, reason);\n            case 7:\n              throw _context.sent;\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n    }\n  }, {\n    key: \"emitSending\",\n    value: function emitSending(tx) {\n      if (this.promiEvent.listenerCount('sending') > 0) {\n        this.promiEvent.emit('sending', tx);\n      }\n    }\n  }, {\n    key: \"populateGasPrice\",\n    value: function populateGasPrice(_ref2) {\n      var transactionFormatted = _ref2.transactionFormatted,\n        transaction = _ref2.transaction;\n      var _a;\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              result = transactionFormatted;\n              if (!(!((_a = this.options) === null || _a === void 0 ? void 0 : _a.ignoreGasPricing) && isNullish(transactionFormatted.gasPrice) && (isNullish(transaction.maxPriorityFeePerGas) || isNullish(transaction.maxFeePerGas)))) {\n                _context2.next = 8;\n                break;\n              }\n              _context2.t0 = Object;\n              _context2.t1 = Object.assign({}, transactionFormatted);\n              _context2.next = 6;\n              return getTransactionGasPricing(transactionFormatted, this.web3Context, ETH_DATA_FORMAT);\n            case 6:\n              _context2.t2 = _context2.sent;\n              result = _context2.t0.assign.call(_context2.t0, _context2.t1, _context2.t2);\n            case 8:\n              return _context2.abrupt(\"return\", result);\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n    }\n  }, {\n    key: \"signAndSend\",\n    value: function signAndSend(_ref3) {\n      var wallet = _ref3.wallet,\n        tx = _ref3.tx;\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var _this = this;\n        var signedTransaction;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              if (!wallet) {\n                _context5.next = 5;\n                break;\n              }\n              _context5.next = 3;\n              return wallet.signTransaction(tx);\n            case 3:\n              signedTransaction = _context5.sent;\n              return _context5.abrupt(\"return\", trySendTransaction(this.web3Context, function () {\n                return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n                  return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n                    while (1) switch (_context3.prev = _context3.next) {\n                      case 0:\n                        return _context3.abrupt(\"return\", ethRpcMethods.sendRawTransaction(this.web3Context.requestManager, signedTransaction.rawTransaction));\n                      case 1:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }, _callee3, this);\n                }));\n              }, signedTransaction.transactionHash));\n            case 5:\n              return _context5.abrupt(\"return\", trySendTransaction(this.web3Context, function () {\n                return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n                  return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n                    while (1) switch (_context4.prev = _context4.next) {\n                      case 0:\n                        return _context4.abrupt(\"return\", ethRpcMethods.sendTransaction(this.web3Context.requestManager, tx));\n                      case 1:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }, _callee4, this);\n                }));\n              }));\n            case 6:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n    }\n  }, {\n    key: \"emitSent\",\n    value: function emitSent(tx) {\n      if (this.promiEvent.listenerCount('sent') > 0) {\n        this.promiEvent.emit('sent', tx);\n      }\n    }\n  }, {\n    key: \"emitTransactionHash\",\n    value: function emitTransactionHash(hash) {\n      if (this.promiEvent.listenerCount('transactionHash') > 0) {\n        this.promiEvent.emit('transactionHash', hash);\n      }\n    }\n  }, {\n    key: \"emitReceipt\",\n    value: function emitReceipt(receipt) {\n      if (this.promiEvent.listenerCount('receipt') > 0) {\n        this.promiEvent.emit('receipt',\n        // @ts-expect-error unknown type fix\n        receipt);\n      }\n    }\n  }, {\n    key: \"handleError\",\n    value: function handleError(_ref4) {\n      var error = _ref4.error,\n        tx = _ref4.tx;\n      var _a;\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var _error;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _error = error;\n              if (!(_error instanceof ContractExecutionError && this.web3Context.handleRevert)) {\n                _context6.next = 5;\n                break;\n              }\n              _context6.next = 4;\n              return getTransactionError(this.web3Context, tx, undefined, undefined, (_a = this.options) === null || _a === void 0 ? void 0 : _a.contractAbi);\n            case 4:\n              _error = _context6.sent;\n            case 5:\n              if ((_error instanceof InvalidResponseError || _error instanceof ContractExecutionError || _error instanceof TransactionRevertWithCustomError || _error instanceof TransactionRevertedWithoutReasonError || _error instanceof TransactionRevertInstructionError) && this.promiEvent.listenerCount('error') > 0) {\n                this.promiEvent.emit('error', _error);\n              }\n              return _context6.abrupt(\"return\", _error);\n            case 7:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this);\n      }));\n    }\n  }, {\n    key: \"emitConfirmation\",\n    value: function emitConfirmation(_ref5) {\n      var receipt = _ref5.receipt,\n        transactionHash = _ref5.transactionHash;\n      if (this.promiEvent.listenerCount('confirmation') > 0) {\n        watchTransactionForConfirmations(this.web3Context, this.promiEvent, receipt, transactionHash, this.returnFormat);\n      }\n    }\n  }, {\n    key: \"handleResolve\",\n    value: function handleResolve(_ref6) {\n      var receipt = _ref6.receipt,\n        tx = _ref6.tx;\n      var _a, _b, _c;\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        var error;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              if (!((_a = this.options) === null || _a === void 0 ? void 0 : _a.transactionResolver)) {\n                _context7.next = 2;\n                break;\n              }\n              return _context7.abrupt(\"return\", (_b = this.options) === null || _b === void 0 ? void 0 : _b.transactionResolver(receipt));\n            case 2:\n              if (!(receipt.status === BigInt(0))) {\n                _context7.next = 10;\n                break;\n              }\n              _context7.next = 5;\n              return getTransactionError(this.web3Context, tx,\n              // @ts-expect-error unknown type fix\n              receipt, undefined, (_c = this.options) === null || _c === void 0 ? void 0 : _c.contractAbi);\n            case 5:\n              error = _context7.sent;\n              if (this.promiEvent.listenerCount('error') > 0) {\n                this.promiEvent.emit('error', error);\n              }\n              throw error;\n            case 10:\n              return _context7.abrupt(\"return\", receipt);\n            case 11:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this);\n      }));\n    }\n  }]);\n  return SendTxHelper;\n}();","map":{"version":3,"names":["ETH_DATA_FORMAT","isNullish","ContractExecutionError","InvalidResponseError","TransactionRevertedWithoutReasonError","TransactionRevertInstructionError","TransactionRevertWithCustomError","ethRpcMethods","getTransactionGasPricing","trySendTransaction","watchTransactionForConfirmations","ALL_EVENTS_ABI","getTransactionError","getRevertReason","decodeEventABI","SendTxHelper","_ref","options","web3Context","promiEvent","returnFormat","_classCallCheck","checkRevertBeforeSending","_createClass","key","value","getReceiptWithEvents","data","result","Object","assign","_a","contractAbi","logs","length","events","_iterator","_createForOfIteratorHelper","_step","s","n","done","log","event","_b","err","e","f","tx","_context","next","reason","sent","undefined","stop","_callee","emitSending","listenerCount","emit","populateGasPrice","_ref2","transactionFormatted","transaction","ignoreGasPricing","gasPrice","maxPriorityFeePerGas","maxFeePerGas","_context2","t0","t1","t2","call","abrupt","_callee2","signAndSend","_ref3","wallet","_context5","signTransaction","signedTransaction","__awaiter","_this","_regeneratorRuntime","mark","_callee3","wrap","_callee3$","_context3","prev","sendRawTransaction","requestManager","rawTransaction","transactionHash","_callee4","_callee4$","_context4","sendTransaction","_callee5","emitSent","emitTransactionHash","hash","emitReceipt","receipt","handleError","_ref4","error","_error","handleRevert","_context6","_callee6","emitConfirmation","_ref5","handleResolve","_ref6","transactionResolver","_context7","status","BigInt","_c","_callee7"],"sources":["D:\\Prasanth\\CCBC2\\611 - Adoption of Cloud Computing and Blockchain\\TelecomProject\\Telcom_GitRepo\\Tfq_GitRepo\\app\\node_modules\\web3-eth\\src\\utils\\send_tx_helper.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport {\n\tETH_DATA_FORMAT,\n\tFormatType,\n\tDataFormat,\n\tEthExecutionAPI,\n\tTransactionWithSenderAPI,\n\tWeb3BaseWalletAccount,\n\tHexString,\n\tTransactionReceipt,\n\tTransaction,\n\tTransactionCall,\n\tTransactionWithFromLocalWalletIndex,\n\tTransactionWithToLocalWalletIndex,\n\tTransactionWithFromAndToLocalWalletIndex,\n\tLogsInput,\n\tTransactionHash,\n\tContractAbiWithSignature,\n} from 'web3-types';\nimport { Web3Context, Web3EventEmitter, Web3PromiEvent } from 'web3-core';\nimport { isNullish } from 'web3-validator';\nimport {\n\tContractExecutionError,\n\tInvalidResponseError,\n\tTransactionRevertedWithoutReasonError,\n\tTransactionRevertInstructionError,\n\tTransactionRevertWithCustomError,\n} from 'web3-errors';\nimport { ethRpcMethods } from 'web3-rpc-methods';\n\nimport {\n\tSendSignedTransactionEvents,\n\tSendTransactionEvents,\n\tSendTransactionOptions,\n} from '../types.js';\n// eslint-disable-next-line import/no-cycle\nimport { getTransactionGasPricing } from './get_transaction_gas_pricing.js';\n// eslint-disable-next-line import/no-cycle\nimport { trySendTransaction } from './try_send_transaction.js';\n// eslint-disable-next-line import/no-cycle\nimport { watchTransactionForConfirmations } from './watch_transaction_for_confirmations.js';\nimport { ALL_EVENTS_ABI } from '../constants.js';\n// eslint-disable-next-line import/no-cycle\nimport { getTransactionError } from './get_transaction_error.js';\n// eslint-disable-next-line import/no-cycle\nimport { getRevertReason } from './get_revert_reason.js';\nimport { decodeEventABI } from './decoding.js';\n\nexport class SendTxHelper<\n\tReturnFormat extends DataFormat,\n\tResolveType = FormatType<TransactionReceipt, ReturnFormat>,\n\tTxType =\n\t\t| Transaction\n\t\t| TransactionWithFromLocalWalletIndex\n\t\t| TransactionWithToLocalWalletIndex\n\t\t| TransactionWithFromAndToLocalWalletIndex,\n> {\n\tprivate readonly web3Context: Web3Context<EthExecutionAPI>;\n\tprivate readonly promiEvent: Web3PromiEvent<\n\t\tResolveType,\n\t\tSendSignedTransactionEvents<ReturnFormat> | SendTransactionEvents<ReturnFormat>\n\t>;\n\tprivate readonly options: SendTransactionOptions<ResolveType> = {\n\t\tcheckRevertBeforeSending: true,\n\t};\n\tprivate readonly returnFormat: ReturnFormat;\n\tpublic constructor({\n\t\toptions,\n\t\tweb3Context,\n\t\tpromiEvent,\n\t\treturnFormat,\n\t}: {\n\t\tweb3Context: Web3Context<EthExecutionAPI>;\n\t\toptions: SendTransactionOptions<ResolveType>;\n\t\tpromiEvent: Web3PromiEvent<\n\t\t\tResolveType,\n\t\t\tSendSignedTransactionEvents<ReturnFormat> | SendTransactionEvents<ReturnFormat>\n\t\t>;\n\t\treturnFormat: ReturnFormat;\n\t}) {\n\t\tthis.options = options;\n\t\tthis.web3Context = web3Context;\n\t\tthis.promiEvent = promiEvent;\n\t\tthis.returnFormat = returnFormat;\n\t}\n\n\tpublic getReceiptWithEvents(data: TransactionReceipt): ResolveType {\n\t\tconst result = { ...(data ?? {}) };\n\t\tif (this.options?.contractAbi && result.logs && result.logs.length > 0) {\n\t\t\tresult.events = {};\n\t\t\tfor (const log of result.logs) {\n\t\t\t\tconst event = decodeEventABI(\n\t\t\t\t\tALL_EVENTS_ABI,\n\t\t\t\t\tlog as LogsInput,\n\t\t\t\t\tthis.options?.contractAbi as ContractAbiWithSignature,\n\t\t\t\t\tthis.returnFormat,\n\t\t\t\t);\n\t\t\t\tif (event.event) {\n\t\t\t\t\tresult.events[event.event] = event;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result as unknown as ResolveType;\n\t}\n\n\tpublic async checkRevertBeforeSending(tx: TransactionCall) {\n\t\tif (this.options.checkRevertBeforeSending !== false) {\n\t\t\tconst reason = await getRevertReason(this.web3Context, tx, this.options.contractAbi);\n\t\t\tif (reason !== undefined) {\n\t\t\t\tthrow await getTransactionError<ReturnFormat>(\n\t\t\t\t\tthis.web3Context,\n\t\t\t\t\ttx,\n\t\t\t\t\tundefined,\n\t\t\t\t\tundefined,\n\t\t\t\t\tthis.options.contractAbi,\n\t\t\t\t\treason,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic emitSending(tx: TxType | HexString) {\n\t\tif (this.promiEvent.listenerCount('sending') > 0) {\n\t\t\tthis.promiEvent.emit('sending', tx);\n\t\t}\n\t}\n\n\tpublic async populateGasPrice({\n\t\ttransactionFormatted,\n\t\ttransaction,\n\t}: {\n\t\ttransactionFormatted: TxType;\n\t\ttransaction: TxType;\n\t}): Promise<TxType> {\n\t\tlet result = transactionFormatted;\n\t\tif (\n\t\t\t!this.options?.ignoreGasPricing &&\n\t\t\tisNullish((transactionFormatted as Transaction).gasPrice) &&\n\t\t\t(isNullish((transaction as Transaction).maxPriorityFeePerGas) ||\n\t\t\t\tisNullish((transaction as Transaction).maxFeePerGas))\n\t\t) {\n\t\t\tresult = {\n\t\t\t\t...transactionFormatted,\n\t\t\t\t// TODO gasPrice, maxPriorityFeePerGas, maxFeePerGas\n\t\t\t\t// should not be included if undefined, but currently are\n\t\t\t\t...(await getTransactionGasPricing(\n\t\t\t\t\ttransactionFormatted,\n\t\t\t\t\tthis.web3Context,\n\t\t\t\t\tETH_DATA_FORMAT,\n\t\t\t\t)),\n\t\t\t};\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic async signAndSend({\n\t\twallet,\n\t\ttx,\n\t}: {\n\t\twallet: Web3BaseWalletAccount | undefined;\n\t\ttx: TxType;\n\t}) {\n\t\tif (wallet) {\n\t\t\tconst signedTransaction = await wallet.signTransaction(tx);\n\n\t\t\treturn trySendTransaction(\n\t\t\t\tthis.web3Context,\n\t\t\t\tasync (): Promise<string> =>\n\t\t\t\t\tethRpcMethods.sendRawTransaction(\n\t\t\t\t\t\tthis.web3Context.requestManager,\n\t\t\t\t\t\tsignedTransaction.rawTransaction,\n\t\t\t\t\t),\n\t\t\t\tsignedTransaction.transactionHash,\n\t\t\t);\n\t\t}\n\t\treturn trySendTransaction(\n\t\t\tthis.web3Context,\n\t\t\tasync (): Promise<string> =>\n\t\t\t\tethRpcMethods.sendTransaction(\n\t\t\t\t\tthis.web3Context.requestManager,\n\t\t\t\t\ttx as Partial<TransactionWithSenderAPI>,\n\t\t\t\t),\n\t\t);\n\t}\n\n\tpublic emitSent(tx: TxType | HexString) {\n\t\tif (this.promiEvent.listenerCount('sent') > 0) {\n\t\t\tthis.promiEvent.emit('sent', tx);\n\t\t}\n\t}\n\tpublic emitTransactionHash(hash: string & Uint8Array) {\n\t\tif (this.promiEvent.listenerCount('transactionHash') > 0) {\n\t\t\tthis.promiEvent.emit('transactionHash', hash);\n\t\t}\n\t}\n\n\tpublic emitReceipt(receipt: ResolveType) {\n\t\tif (this.promiEvent.listenerCount('receipt') > 0) {\n\t\t\t(\n\t\t\t\tthis.promiEvent as Web3EventEmitter<\n\t\t\t\t\tSendTransactionEvents<ReturnFormat> | SendSignedTransactionEvents<ReturnFormat>\n\t\t\t\t>\n\t\t\t).emit(\n\t\t\t\t'receipt',\n\t\t\t\t// @ts-expect-error unknown type fix\n\t\t\t\treceipt,\n\t\t\t);\n\t\t}\n\t}\n\n\tpublic async handleError({ error, tx }: { error: unknown; tx: TransactionCall }) {\n\t\tlet _error = error;\n\n\t\tif (_error instanceof ContractExecutionError && this.web3Context.handleRevert) {\n\t\t\t_error = await getTransactionError(\n\t\t\t\tthis.web3Context,\n\t\t\t\ttx,\n\t\t\t\tundefined,\n\t\t\t\tundefined,\n\t\t\t\tthis.options?.contractAbi,\n\t\t\t);\n\t\t}\n\n\t\tif (\n\t\t\t(_error instanceof InvalidResponseError ||\n\t\t\t\t_error instanceof ContractExecutionError ||\n\t\t\t\t_error instanceof TransactionRevertWithCustomError ||\n\t\t\t\t_error instanceof TransactionRevertedWithoutReasonError ||\n\t\t\t\t_error instanceof TransactionRevertInstructionError) &&\n\t\t\tthis.promiEvent.listenerCount('error') > 0\n\t\t) {\n\t\t\tthis.promiEvent.emit('error', _error);\n\t\t}\n\n\t\treturn _error;\n\t}\n\n\tpublic emitConfirmation({\n\t\treceipt,\n\t\ttransactionHash,\n\t}: {\n\t\treceipt: ResolveType;\n\t\ttransactionHash: TransactionHash;\n\t}) {\n\t\tif (this.promiEvent.listenerCount('confirmation') > 0) {\n\t\t\twatchTransactionForConfirmations<\n\t\t\t\tReturnFormat,\n\t\t\t\tSendSignedTransactionEvents<ReturnFormat> | SendTransactionEvents<ReturnFormat>,\n\t\t\t\tResolveType\n\t\t\t>(\n\t\t\t\tthis.web3Context,\n\t\t\t\tthis.promiEvent,\n\t\t\t\treceipt as unknown as TransactionReceipt,\n\t\t\t\ttransactionHash,\n\t\t\t\tthis.returnFormat,\n\t\t\t);\n\t\t}\n\t}\n\n\tpublic async handleResolve({ receipt, tx }: { receipt: ResolveType; tx: TransactionCall }) {\n\t\tif (this.options?.transactionResolver) {\n\t\t\treturn this.options?.transactionResolver(receipt as unknown as TransactionReceipt);\n\t\t}\n\t\tif ((receipt as unknown as TransactionReceipt).status === BigInt(0)) {\n\t\t\tconst error = await getTransactionError<ReturnFormat>(\n\t\t\t\tthis.web3Context,\n\t\t\t\ttx,\n\t\t\t\t// @ts-expect-error unknown type fix\n\t\t\t\treceipt,\n\t\t\t\tundefined,\n\t\t\t\tthis.options?.contractAbi,\n\t\t\t);\n\t\t\tif (this.promiEvent.listenerCount('error') > 0) {\n\t\t\t\tthis.promiEvent.emit('error', error);\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t} else {\n\t\t\treturn receipt;\n\t\t}\n\t}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}