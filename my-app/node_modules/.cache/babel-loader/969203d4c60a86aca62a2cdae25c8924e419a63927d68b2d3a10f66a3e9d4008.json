{"ast":null,"code":"import _toConsumableArray from \"D:/Prasanth/CCBC2/611 - Adoption of Cloud Computing and Blockchain/TelecomProject/Telcom_GitRepo/Tfq_GitRepo/app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"D:/Prasanth/CCBC2/611 - Adoption of Cloud Computing and Blockchain/TelecomProject/Telcom_GitRepo/Tfq_GitRepo/app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { uint8ArrayConcat } from 'web3-utils';\nimport { WORD_SIZE } from '../utils.js';\nimport { encodeNumber } from './number.js';\nexport function encodeDynamicParams(encodedParams) {\n  var staticSize = 0;\n  var dynamicSize = 0;\n  var staticParams = [];\n  var dynamicParams = [];\n  // figure out static size\n  var _iterator = _createForOfIteratorHelper(encodedParams),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var encodedParam = _step.value;\n      if (encodedParam.dynamic) {\n        staticSize += WORD_SIZE;\n      } else {\n        staticSize += encodedParam.encoded.length;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  var _iterator2 = _createForOfIteratorHelper(encodedParams),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var _encodedParam = _step2.value;\n      if (_encodedParam.dynamic) {\n        staticParams.push(encodeNumber({\n          type: 'uint256',\n          name: ''\n        }, staticSize + dynamicSize));\n        dynamicParams.push(_encodedParam);\n        dynamicSize += _encodedParam.encoded.length;\n      } else {\n        staticParams.push(_encodedParam);\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  return uint8ArrayConcat.apply(void 0, _toConsumableArray(staticParams.map(function (p) {\n    return p.encoded;\n  })).concat(_toConsumableArray(dynamicParams.map(function (p) {\n    return p.encoded;\n  }))));\n}","map":{"version":3,"names":["uint8ArrayConcat","WORD_SIZE","encodeNumber","encodeDynamicParams","encodedParams","staticSize","dynamicSize","staticParams","dynamicParams","_iterator","_createForOfIteratorHelper","_step","s","n","done","encodedParam","value","dynamic","encoded","length","err","e","f","_iterator2","_step2","push","type","name","apply","_toConsumableArray","map","p","concat"],"sources":["D:\\Prasanth\\CCBC2\\611 - Adoption of Cloud Computing and Blockchain\\TelecomProject\\Telcom_GitRepo\\Tfq_GitRepo\\app\\node_modules\\web3-eth-abi\\src\\coders\\base\\utils.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { uint8ArrayConcat } from 'web3-utils';\nimport { EncoderResult } from '../types.js';\nimport { WORD_SIZE } from '../utils.js';\nimport { encodeNumber } from './number.js';\n\nexport function encodeDynamicParams(encodedParams: ReadonlyArray<EncoderResult>): Uint8Array {\n\tlet staticSize = 0;\n\tlet dynamicSize = 0;\n\tconst staticParams: EncoderResult[] = [];\n\tconst dynamicParams: EncoderResult[] = [];\n\t// figure out static size\n\tfor (const encodedParam of encodedParams) {\n\t\tif (encodedParam.dynamic) {\n\t\t\tstaticSize += WORD_SIZE;\n\t\t} else {\n\t\t\tstaticSize += encodedParam.encoded.length;\n\t\t}\n\t}\n\n\tfor (const encodedParam of encodedParams) {\n\t\tif (encodedParam.dynamic) {\n\t\t\tstaticParams.push(\n\t\t\t\tencodeNumber({ type: 'uint256', name: '' }, staticSize + dynamicSize),\n\t\t\t);\n\t\t\tdynamicParams.push(encodedParam);\n\t\t\tdynamicSize += encodedParam.encoded.length;\n\t\t} else {\n\t\t\tstaticParams.push(encodedParam);\n\t\t}\n\t}\n\treturn uint8ArrayConcat(\n\t\t...staticParams.map(p => p.encoded),\n\t\t...dynamicParams.map(p => p.encoded),\n\t);\n}\n"],"mappings":";;AAAA;;;;;;;;;;;;;;;;AAgBA,SAASA,gBAAgB,QAAQ,YAAY;AAE7C,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,YAAY,QAAQ,aAAa;AAE1C,OAAM,SAAUC,mBAAmBA,CAACC,aAA2C;EAC9E,IAAIC,UAAU,GAAG,CAAC;EAClB,IAAIC,WAAW,GAAG,CAAC;EACnB,IAAMC,YAAY,GAAoB,EAAE;EACxC,IAAMC,aAAa,GAAoB,EAAE;EACzC;EAAA,IAAAC,SAAA,GAAAC,0BAAA,CAC2BN,aAAa;IAAAO,KAAA;EAAA;IAAxC,KAAAF,SAAA,CAAAG,CAAA,MAAAD,KAAA,GAAAF,SAAA,CAAAI,CAAA,IAAAC,IAAA,GAA0C;MAAA,IAA/BC,YAAY,GAAAJ,KAAA,CAAAK,KAAA;MACtB,IAAID,YAAY,CAACE,OAAO,EAAE;QACzBZ,UAAU,IAAIJ,SAAS;OACvB,MAAM;QACNI,UAAU,IAAIU,YAAY,CAACG,OAAO,CAACC,MAAM;;;EAE1C,SAAAC,GAAA;IAAAX,SAAA,CAAAY,CAAA,CAAAD,GAAA;EAAA;IAAAX,SAAA,CAAAa,CAAA;EAAA;EAAA,IAAAC,UAAA,GAAAb,0BAAA,CAE0BN,aAAa;IAAAoB,MAAA;EAAA;IAAxC,KAAAD,UAAA,CAAAX,CAAA,MAAAY,MAAA,GAAAD,UAAA,CAAAV,CAAA,IAAAC,IAAA,GAA0C;MAAA,IAA/BC,aAAY,GAAAS,MAAA,CAAAR,KAAA;MACtB,IAAID,aAAY,CAACE,OAAO,EAAE;QACzBV,YAAY,CAACkB,IAAI,CAChBvB,YAAY,CAAC;UAAEwB,IAAI,EAAE,SAAS;UAAEC,IAAI,EAAE;QAAE,CAAE,EAAEtB,UAAU,GAAGC,WAAW,CAAC,CACrE;QACDE,aAAa,CAACiB,IAAI,CAACV,aAAY,CAAC;QAChCT,WAAW,IAAIS,aAAY,CAACG,OAAO,CAACC,MAAM;OAC1C,MAAM;QACNZ,YAAY,CAACkB,IAAI,CAACV,aAAY,CAAC;;;EAEhC,SAAAK,GAAA;IAAAG,UAAA,CAAAF,CAAA,CAAAD,GAAA;EAAA;IAAAG,UAAA,CAAAD,CAAA;EAAA;EACD,OAAOtB,gBAAgB,CAAA4B,KAAA,SAAAC,kBAAA,CACnBtB,YAAY,CAACuB,GAAG,CAAC,UAAAC,CAAC;IAAA,OAAIA,CAAC,CAACb,OAAO;EAAA,EAAC,EAAAc,MAAA,CAAAH,kBAAA,CAChCrB,aAAa,CAACsB,GAAG,CAAC,UAAAC,CAAC;IAAA,OAAIA,CAAC,CAACb,OAAO;EAAA,EAAC,GACpC;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}