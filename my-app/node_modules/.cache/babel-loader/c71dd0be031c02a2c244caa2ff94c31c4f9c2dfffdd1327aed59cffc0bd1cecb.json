{"ast":null,"code":"import _regeneratorRuntime from \"D:/Prasanth/CCBC2/611 - Adoption of Cloud Computing and Blockchain/TelecomProject/Telcom_GitRepo/Tfq_GitRepo/app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _slicedToArray from \"D:/Prasanth/CCBC2/611 - Adoption of Cloud Computing and Blockchain/TelecomProject/Telcom_GitRepo/Tfq_GitRepo/app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { TransactionPollingTimeoutError } from 'web3-errors';\n// eslint-disable-next-line import/no-cycle\nimport { pollTillDefinedAndReturnIntervalId, rejectIfTimeout } from 'web3-utils';\n// eslint-disable-next-line import/no-cycle\nimport { rejectIfBlockTimeout } from './reject_if_block_timeout.js';\n// eslint-disable-next-line import/no-cycle\nimport { getTransactionReceipt } from '../rpc_method_wrappers.js';\nexport function waitForTransactionReceipt(web3Context, transactionHash, returnFormat) {\n  var _a;\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n    var _this = this;\n    var pollingInterval, _pollTillDefinedAndRe, _pollTillDefinedAndRe2, awaitableTransactionReceipt, IntervalId, _rejectIfTimeout, _rejectIfTimeout2, timeoutId, rejectOnTimeout, _yield$rejectIfBlockT, _yield$rejectIfBlockT2, rejectOnBlockTimeout, blockTimeoutResourceCleaner;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          pollingInterval = (_a = web3Context.transactionReceiptPollingInterval) !== null && _a !== void 0 ? _a : web3Context.transactionPollingInterval;\n          _pollTillDefinedAndRe = pollTillDefinedAndReturnIntervalId(function () {\n            return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n              return _regeneratorRuntime().wrap(function _callee$(_context) {\n                while (1) switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.prev = 0;\n                    return _context.abrupt(\"return\", getTransactionReceipt(web3Context, transactionHash, returnFormat));\n                  case 4:\n                    _context.prev = 4;\n                    _context.t0 = _context[\"catch\"](0);\n                    console.warn('An error happen while trying to get the transaction receipt', _context.t0);\n                    return _context.abrupt(\"return\", undefined);\n                  case 8:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }, _callee, null, [[0, 4]]);\n            }));\n          }, pollingInterval), _pollTillDefinedAndRe2 = _slicedToArray(_pollTillDefinedAndRe, 2), awaitableTransactionReceipt = _pollTillDefinedAndRe2[0], IntervalId = _pollTillDefinedAndRe2[1];\n          _rejectIfTimeout = rejectIfTimeout(web3Context.transactionPollingTimeout, new TransactionPollingTimeoutError({\n            numberOfSeconds: web3Context.transactionPollingTimeout / 1000,\n            transactionHash: transactionHash\n          })), _rejectIfTimeout2 = _slicedToArray(_rejectIfTimeout, 2), timeoutId = _rejectIfTimeout2[0], rejectOnTimeout = _rejectIfTimeout2[1];\n          _context2.next = 5;\n          return rejectIfBlockTimeout(web3Context, transactionHash);\n        case 5:\n          _yield$rejectIfBlockT = _context2.sent;\n          _yield$rejectIfBlockT2 = _slicedToArray(_yield$rejectIfBlockT, 2);\n          rejectOnBlockTimeout = _yield$rejectIfBlockT2[0];\n          blockTimeoutResourceCleaner = _yield$rejectIfBlockT2[1];\n          _context2.prev = 9;\n          _context2.next = 12;\n          return Promise.race([awaitableTransactionReceipt, rejectOnTimeout, rejectOnBlockTimeout // this will throw an error on Transaction Block Timeout\n          ]);\n        case 12:\n          return _context2.abrupt(\"return\", _context2.sent);\n        case 13:\n          _context2.prev = 13;\n          if (timeoutId) clearTimeout(timeoutId);\n          if (IntervalId) clearInterval(IntervalId);\n          blockTimeoutResourceCleaner.clean();\n          return _context2.finish(13);\n        case 18:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2, null, [[9,, 13, 18]]);\n  }));\n}","map":{"version":3,"names":["TransactionPollingTimeoutError","pollTillDefinedAndReturnIntervalId","rejectIfTimeout","rejectIfBlockTimeout","getTransactionReceipt","waitForTransactionReceipt","web3Context","transactionHash","returnFormat","pollingInterval","_a","transactionReceiptPollingInterval","transactionPollingInterval","_pollTillDefinedAndRe","__awaiter","_this","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","abrupt","t0","console","warn","undefined","stop","_pollTillDefinedAndRe2","_slicedToArray","awaitableTransactionReceipt","IntervalId","_rejectIfTimeout","transactionPollingTimeout","numberOfSeconds","_rejectIfTimeout2","timeoutId","rejectOnTimeout","_context2","_yield$rejectIfBlockT","sent","_yield$rejectIfBlockT2","rejectOnBlockTimeout","blockTimeoutResourceCleaner","Promise","race","clearTimeout","clearInterval","clean","finish","_callee2"],"sources":["D:\\Prasanth\\CCBC2\\611 - Adoption of Cloud Computing and Blockchain\\TelecomProject\\Telcom_GitRepo\\Tfq_GitRepo\\app\\node_modules\\web3-eth\\src\\utils\\wait_for_transaction_receipt.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { Web3Context } from 'web3-core';\nimport { TransactionPollingTimeoutError } from 'web3-errors';\nimport { EthExecutionAPI, Bytes, TransactionReceipt, DataFormat } from 'web3-types';\n\n// eslint-disable-next-line import/no-cycle\nimport { pollTillDefinedAndReturnIntervalId, rejectIfTimeout } from 'web3-utils';\n// eslint-disable-next-line import/no-cycle\nimport { rejectIfBlockTimeout } from './reject_if_block_timeout.js';\n// eslint-disable-next-line import/no-cycle\nimport { getTransactionReceipt } from '../rpc_method_wrappers.js';\n\nexport async function waitForTransactionReceipt<ReturnFormat extends DataFormat>(\n\tweb3Context: Web3Context<EthExecutionAPI>,\n\ttransactionHash: Bytes,\n\treturnFormat: ReturnFormat,\n): Promise<TransactionReceipt> {\n\n\tconst pollingInterval =\n\t\tweb3Context.transactionReceiptPollingInterval ?? web3Context.transactionPollingInterval;\n\n\tconst [awaitableTransactionReceipt, IntervalId] = pollTillDefinedAndReturnIntervalId(async () => {\n\t\ttry {\n\t\t\treturn getTransactionReceipt(web3Context, transactionHash, returnFormat);\n\t\t} catch (error) {\n\t\t\tconsole.warn('An error happen while trying to get the transaction receipt', error);\n\t\t\treturn undefined;\n\t\t}\n\t}, pollingInterval);\n\n\tconst [timeoutId, rejectOnTimeout] = rejectIfTimeout(\n\t\tweb3Context.transactionPollingTimeout,\n\t\tnew TransactionPollingTimeoutError({\n\t\t\tnumberOfSeconds: web3Context.transactionPollingTimeout / 1000,\n\t\t\ttransactionHash,\n\t\t}),\n\t);\n\n\tconst [rejectOnBlockTimeout, blockTimeoutResourceCleaner] = await rejectIfBlockTimeout(\n\t\tweb3Context,\n\t\ttransactionHash,\n\t);\n\n\ttry {\n\t\t// If an error happened here, do not catch it, just clear the resources before raising it to the caller function.\n\t\treturn await Promise.race([\n\t\t\tawaitableTransactionReceipt,\n\t\t\trejectOnTimeout, // this will throw an error on Transaction Polling Timeout\n\t\t\trejectOnBlockTimeout, // this will throw an error on Transaction Block Timeout\n\t\t]);\n\t} finally {\n\t\tif(timeoutId)\n\t\t\tclearTimeout(timeoutId);\n\t\tif(IntervalId)\n\t\t\tclearInterval(IntervalId);\n\t\tblockTimeoutResourceCleaner.clean();\n\t}\n}\n"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBA,SAASA,8BAA8B,QAAQ,aAAa;AAG5D;AACA,SAASC,kCAAkC,EAAEC,eAAe,QAAQ,YAAY;AAChF;AACA,SAASC,oBAAoB,QAAQ,8BAA8B;AACnE;AACA,SAASC,qBAAqB,QAAQ,2BAA2B;AAEjE,OAAM,SAAgBC,yBAAyBA,CAC9CC,WAAyC,EACzCC,eAAsB,EACtBC,YAA0B;;;;;;;;UAGpBC,eAAe,GACpB,CAAAC,EAAA,GAAAJ,WAAW,CAACK,iCAAiC,cAAAD,EAAA,cAAAA,EAAA,GAAIJ,WAAW,CAACM,0BAA0B;UAAAC,qBAAA,GAEtCZ,kCAAkC,CAAC;YAAA,OAAWa,SAAA,CAAAC,KAAA,+BAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;cAAA,OAAAF,mBAAA,GAAAG,IAAA,UAAAC,SAAAC,QAAA;gBAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;kBAAA;oBAAAF,QAAA,CAAAC,IAAA;oBAAA,OAAAD,QAAA,CAAAG,MAAA,WAEvFpB,qBAAqB,CAACE,WAAW,EAAEC,eAAe,EAAEC,YAAY,CAAC;kBAAA;oBAAAa,QAAA,CAAAC,IAAA;oBAAAD,QAAA,CAAAI,EAAA,GAAAJ,QAAA;oBAExEK,OAAO,CAACC,IAAI,CAAC,6DAA6D,EAAAN,QAAA,CAAAI,EAAO,CAAC;oBAAC,OAAAJ,QAAA,CAAAG,MAAA,WAC5EI,SAAS;kBAAA;kBAAA;oBAAA,OAAAP,QAAA,CAAAQ,IAAA;gBAAA;cAAA,GAAAX,OAAA;YAAA,CAEjB;UAAA,GAAET,eAAe,CAAC,EAAAqB,sBAAA,GAAAC,cAAA,CAAAlB,qBAAA,MAPZmB,2BAA2B,GAAAF,sBAAA,KAAEG,UAAU,GAAAH,sBAAA;UAAAI,gBAAA,GASThC,eAAe,CACnDI,WAAW,CAAC6B,yBAAyB,EACrC,IAAInC,8BAA8B,CAAC;YAClCoC,eAAe,EAAE9B,WAAW,CAAC6B,yBAAyB,GAAG,IAAI;YAC7D5B,eAAe,EAAfA;WACA,CAAC,CACF,EAAA8B,iBAAA,GAAAN,cAAA,CAAAG,gBAAA,MANMI,SAAS,GAAAD,iBAAA,KAAEE,eAAe,GAAAF,iBAAA;UAAAG,SAAA,CAAAjB,IAAA;UAQ2B,OAAMpB,oBAAoB,CACrFG,WAAW,EACXC,eAAe,CACf;QAAA;UAAAkC,qBAAA,GAAAD,SAAA,CAAAE,IAAA;UAAAC,sBAAA,GAAAZ,cAAA,CAAAU,qBAAA;UAHMG,oBAAoB,GAAAD,sBAAA;UAAEE,2BAA2B,GAAAF,sBAAA;UAAAH,SAAA,CAAAlB,IAAA;UAAAkB,SAAA,CAAAjB,IAAA;UAOhD,OAAMuB,OAAO,CAACC,IAAI,CAAC,CACzBf,2BAA2B,EAC3BO,eAAe,EACfK,oBAAoB,CAAE;UAAA,CACtB,CAAC;QAAA;UAAA,OAAAJ,SAAA,CAAAhB,MAAA,WAAAgB,SAAA,CAAAE,IAAA;QAAA;UAAAF,SAAA,CAAAlB,IAAA;UAEF,IAAGgB,SAAS,EACXU,YAAY,CAACV,SAAS,CAAC;UACxB,IAAGL,UAAU,EACZgB,aAAa,CAAChB,UAAU,CAAC;UAC1BY,2BAA2B,CAACK,KAAK,EAAE;UAAC,OAAAV,SAAA,CAAAW,MAAA;QAAA;QAAA;UAAA,OAAAX,SAAA,CAAAX,IAAA;MAAA;IAAA,GAAAuB,QAAA;EAAA,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}